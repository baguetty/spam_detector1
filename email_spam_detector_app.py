# -*- coding: utf-8 -*-
"""Email spam detector app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w_2P9omZoaUobIp5wto9ReFqsvvs2LQR
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import tensorflow as tf
# import numpy as np
# import pickle
# from keras.preprocessing.sequence import pad_sequences
# from streamlit_gauge import st_gauge
# 
# model = tf.keras.models.load_model("spam_detector_model.h5")
# 
# with open("tokenizer.pkl", "rb") as f:
#     tokenizer = pickle.load(f)
# 
# max_len = 10000  # this is what i put on the other file as well
# 
# 
# st.set_page_config(page_title="üîç Email Spam Detector", layout="centered")
# st.markdown("<h1 style='text-align: center; color: #333;'>üìß Email Spam Detector</h1>", unsafe_allow_html=True)
# st.write("")
# 
# #layout - seperate into left n right
# col1, col2 = st.columns([1, 2])
# 
# with col2:
#     email_input = st.text_area("Write your email content below üëá", height=300)
# 
#     run = st.button("Run", use_container_width=True)
# 
# if run and email_input.strip() != "":
#     # Preprocess input
#     seq = tokenizer.texts_to_sequences([email_input])
#     padded = pad_sequences(seq, maxlen=max_len, padding='post')
# 
#     # Predict
#     prediction = model.predict(padded)[0][0]
#     confidence = round(prediction * 100, 2)
# 
#     # Determine label and color
#     is_spam = prediction >= 0.3
#     label = "üö´ SPAM" if is_spam else "‚úÖ NOT SPAM"
#     color = "red" if is_spam else "green"
# 
#     # Display gauge
#     with col1:
#         st.markdown("### Prediction")
#         st_gauge(
#             label=label,
#             value=confidence,
#             min_value=0,
#             max_value=100,
#             color=color,
#             suffix="%"  # shows e.g., 78%
#         )
#